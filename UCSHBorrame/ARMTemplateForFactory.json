{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "UCSHBorrame"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"Informix1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Informix1'"
		},
		"Informix1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Informix1'"
		},
		"Informix1_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'Informix1'"
		},
		"UCSH_borrame_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'UCSH_borrame'"
		},
		"Informix1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "informix"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DATA_FLOW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SIMPLE_LOAD",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "8726d16b-d793-46d1-b26d-ba8f5fafa0da"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "InformixSource",
								"query": "select\ntrim(codi_codi) as CODIGO_ESTADO_POSTULANTE,\ntrim(codi_desc) as ESTADO_POSTULANTE,\n'ADCODI' as ORIGEN\nfrom informix.adcodi\nwhere codi_id = 'sele_esta';"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo_estado_postulante",
											"type": "String"
										},
										"sink": {
											"name": "codigo_estado_postulante",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "estado_postulante",
											"type": "String"
										},
										"sink": {
											"name": "estado_postulante",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "origen",
											"type": "String"
										},
										"sink": {
											"name": "origen",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InformixTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "COPY_STG_ESTADO_POSTULANTE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SIMPLE_LOAD')]",
				"[concat(variables('factoryId'), '/datasets/InformixTable1')]",
				"[concat(variables('factoryId'), '/datasets/COPY_STG_ESTADO_POSTULANTE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOG_REGISTRO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inicio de LOG",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "UCSH_borrame",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": {
										"value": "INSERT INTO LOG_PROCESO_ETL (AMBIENTE, ESTADO, FECHA_INICIO_EJEC, PROCESO, TAREA, TIPO_CARGA, TIPO_PROCESO) VALUES\n(\n    '@{pipeline().globalParameters.Environment}',\n    'En Ejecucion',\n    GETDATE(),\n    '@{pipeline().Pipeline}',\n    '@{pipeline().TriggerName}',\n    '@{pipeline().parameters.ETL_CARGA}',\n    '@{pipeline().parameters.ETL_TIPO_PROCESO}'\n)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Obtener ID",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Inicio de LOG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "UCSH_borrame",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "SELECT TOP 1 [ETL_ID] FROM [dbo].[LOG_PROCESO_ETL] ORDER BY FECHA_INICIO_EJEC DESC;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Guardar ID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Obtener ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ETL_ID",
							"value": {
								"value": "@string(activity('Obtener ID').output.resultSets[0].rows[0].ETL_ID)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Fecha de Inicio",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ETL_FECHA",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Fecha de Inicio",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Guardar ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "STG_ESTADO_POSTULANTE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ETL_ID": {
									"value": "@variables('ETL_ID')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Duracion",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ETL_DURACION",
							"value": {
								"value": "@string(div(sub(ticks(utcNow()),ticks(variables('ETL_FECHA'))),10000000))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Terminar LOG",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Duracion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "UCSH_borrame",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": {
										"value": "UPDATE [dbo].[LOG_PROCESO_ETL]\nSET\n    [FECHA_TERMINO_EJEC] = GETDATE(),\n    [DURACION] = @{variables('ETL_DURACION')},\n    [ESTADO] = 'Terminado',\n    [CANTIDAD_INSERTADOS] = 10,\n    [CANTIDAD_ACTUALIZADOS] = 10,\n    [TAREA] = '@{pipeline().TriggerName}'\nWHERE\n[ETL_ID] = @{variables('ETL_ID')}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ETL_TIPO_PROCESO": {
						"type": "string",
						"defaultValue": "CARGA"
					},
					"ETL_CARGA": {
						"type": "string"
					}
				},
				"variables": {
					"ETL_ID": {
						"type": "String"
					},
					"ETL_FECHA": {
						"type": "String"
					},
					"ETL_DURACION": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UCSH_borrame')]",
				"[concat(variables('factoryId'), '/pipelines/STG_ESTADO_POSTULANTE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_ESTADO_POSTULANTE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy a CSV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "InformixSource",
								"query": {
									"value": "select\ncase\n\twhen codi_codi is null then 0\n\telse row_number() over (order by codi_codi)\nend as ESTADO_POSTULANTE_SK,\ntrim(codi_codi) as CODIGO_ESTADO_POSTULANTE,\ntrim(codi_desc) as ESTADO_POSTULANTE,\n'ADCODI' as ORIGEN\nfrom informix.adcodi\nwhere codi_id = 'sele_esta';",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "estado_postulante_sk",
											"type": "String"
										},
										"sink": {
											"name": "estado_postulante_sk",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "codigo_estado_postulante",
											"type": "String"
										},
										"sink": {
											"name": "codigo_estado_postulante",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "estado_postulante",
											"type": "String"
										},
										"sink": {
											"name": "estado_postulante",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "origen",
											"type": "String"
										},
										"sink": {
											"name": "origen",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InformixTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "COPY_STG_ESTADO_POSTULANTE_PARQUET",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ADD STG AZURE SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy a CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "LOAD_STG_ESTADO_POSTULANTE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EstadoPostulanteCSV": {},
									"EstadoPostulanteSQL": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "fd4c5ae6-aa1c-4028-b9ca-f8d22e86fae8"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InformixTable1')]",
				"[concat(variables('factoryId'), '/datasets/COPY_STG_ESTADO_POSTULANTE_PARQUET')]",
				"[concat(variables('factoryId'), '/dataflows/LOAD_STG_ESTADO_POSTULANTE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_ESTADO_POSTULANTE_DELETE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Borrar STG",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "UCSH_borrame",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "DELETE [dbo].[QA_STG_ESTADO_POSTULANTE];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Cargar STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Borrar STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "InformixSource",
								"query": {
									"value": "select\ncase\n\twhen codi_codi is null then 0\n\telse row_number() over (order by codi_codi)\nend as ESTADO_POSTULANTE_SK,\ntrim(codi_codi) as CODIGO_ESTADO_POSTULANTE,\ntrim(codi_desc) as ESTADO_POSTULANTE,\nCURRENT as FECHA_CREACION,\nCURRENT as FECHA_ACTUALIZACION,\n'ADCODI' as ORIGEN,\n@{pipeline().parameters.ETL_ID} as ETL_ID\nfrom informix.adcodi\nwhere codi_id = 'sele_esta';",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "estado_postulante_sk",
											"type": "String"
										},
										"sink": {
											"name": "ESTADO_POSTULANTE_SK",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "codigo_estado_postulante",
											"type": "String"
										},
										"sink": {
											"name": "CODIGO_ESTADO_POSTULANTE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "estado_postulante",
											"type": "String"
										},
										"sink": {
											"name": "ESTADO_POSTULANTE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fecha_creacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "FECHA_CREACION",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "fecha_actualizacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "FECHA_ACTUALIZACION",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "origen",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "etl_id",
											"type": "Int32"
										},
										"sink": {
											"name": "ETL_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InformixTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "QA_STG_ESTADO_POSTULANTE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Retorno de pipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Cargar STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "INSERTADOS",
									"value": {
										"type": "Expression",
										"content": "@activity('Cargar STG').output.rowsRead"
									}
								},
								{
									"key": "ACTUALIZADOS",
									"value": {
										"type": "Expression",
										"content": "@activity('Cargar STG').output.rowsCopied"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ETL_ID": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UCSH_borrame')]",
				"[concat(variables('factoryId'), '/datasets/InformixTable1')]",
				"[concat(variables('factoryId'), '/datasets/QA_STG_ESTADO_POSTULANTE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_STG_ESTADO_POSTULANTE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dim_estado_postulante.csv",
						"folderPath": "estado_postulante",
						"container": "storage-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_STG_ESTADO_POSTULANTE_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "stg_estado_postulante.csv",
						"folderPath": "estado_postulante",
						"container": "storage-data"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InformixTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Informix1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "InformixTable",
				"schema": [],
				"typeProperties": {
					"tableName": "informix.adcodi"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Informix1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_STG_ESTADO_POSTULANTE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "UCSH_borrame",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ESTADO_POSTULANTE_SK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODIGO_ESTADO_POSTULANTE",
						"type": "char"
					},
					{
						"name": "ESTADO_POSTULANTE",
						"type": "varchar"
					},
					{
						"name": "CRC",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FECHA_CREACION",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FECHA_ACTUALIZACION",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ORIGEN",
						"type": "varchar"
					},
					{
						"name": "ETL_ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "QA_STG_ESTADO_POSTULANTE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/UCSH_borrame')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Informix1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Informix",
				"typeProperties": {
					"connectionString": "[parameters('Informix1_connectionString')]",
					"authenticationType": "Basic",
					"userName": "[parameters('Informix1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Informix1_password')]"
					},
					"credential": {
						"type": "SecureString",
						"value": "[parameters('Informix1_credential')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UCSH_borrame')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('UCSH_borrame_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_STG_ESTADO_POSTULANTE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "EstadoPostulanteCSV"
						},
						{
							"linkedService": {
								"referenceName": "UCSH_borrame",
								"type": "LinkedServiceReference"
							},
							"name": "EstadoPostulanteSQL"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "UCSH_borrame",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "CrearCRC"
						},
						{
							"name": "Exists"
						},
						{
							"name": "Lookup"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          estado_postulante_sk as integer,",
						"          codigo_estado_postulante as string,",
						"          estado_postulante as string,",
						"          origen as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: true,",
						"     format: 'parquet',",
						"     container: 'storage-data',",
						"     folderPath: 'estado_postulante') ~> EstadoPostulanteCSV",
						"source(output(",
						"          ESTADO_POSTULANTE_SK as integer,",
						"          CODIGO_ESTADO_POSTULANTE as string,",
						"          ESTADO_POSTULANTE as string,",
						"          CRC as long,",
						"          FECHA_CREACION as timestamp,",
						"          FECHA_ACTUALIZACION as timestamp,",
						"          ORIGEN as string,",
						"          ETL_ID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'QA_STG_ESTADO_POSTULANTE',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> EstadoPostulanteSQL",
						"EstadoPostulanteCSV derive(CRC = crc32(codigo_estado_postulante,estado_postulante)) ~> CrearCRC",
						"CrearCRC, EstadoPostulanteSQL exists(CrearCRC@CRC == EstadoPostulanteSQL@CRC,",
						"     negate:true,",
						"     broadcast: 'auto')~> Exists",
						"Exists, EstadoPostulanteSQL lookup(EstadoPostulanteCSV@estado_postulante_sk == EstadoPostulanteSQL@ESTADO_POSTULANTE_SK,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> Lookup",
						"Lookup derive(FECHA_ACTUALIZACION = iif(CrearCRC@CRC != iifNull(EstadoPostulanteSQL@CRC, 0),\r",
						"currentTimestamp(),\r",
						"FECHA_ACTUALIZACION\r",
						")) ~> derivedColumn1",
						"derivedColumn1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ESTADO_POSTULANTE_SK as integer,",
						"          CODIGO_ESTADO_POSTULANTE as string,",
						"          ESTADO_POSTULANTE as string,",
						"          CRC as integer,",
						"          FECHA_CREACION as timestamp,",
						"          FECHA_ACTUALIZACION as timestamp,",
						"          ORIGEN as string,",
						"          ETL_ID as integer",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'QA_STG_ESTADO_POSTULANTE',",
						"     insertable: false,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: true,",
						"     keys:['estado_postulante_sk'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ESTADO_POSTULANTE_SK = EstadoPostulanteCSV@estado_postulante_sk,",
						"          CODIGO_ESTADO_POSTULANTE = EstadoPostulanteCSV@codigo_estado_postulante,",
						"          ESTADO_POSTULANTE = EstadoPostulanteCSV@estado_postulante,",
						"          ORIGEN = EstadoPostulanteCSV@origen,",
						"          CRC = CrearCRC@CRC,",
						"          FECHA_CREACION,",
						"          FECHA_ACTUALIZACION,",
						"          ETL_ID",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/linkedServices/UCSH_borrame')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SIMPLE_LOAD')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "UCSH_borrame",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          codigo_estado_postulante as string,",
						"          estado_postulante as string,",
						"          origen as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: true,",
						"     format: 'delimited',",
						"     container: 'storage-data',",
						"     folderPath: 'estado_postulante',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODIGO_ESTADO_POSTULANTE as string,",
						"          ESTADO_POSTULANTE as string,",
						"          ORIGEN as string",
						"     ),",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'TEST_CHANGE',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CODIGO_ESTADO_POSTULANTE = codigo_estado_postulante,",
						"          ESTADO_POSTULANTE = estado_postulante,",
						"          ORIGEN = origen",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/linkedServices/UCSH_borrame')]"
			]
		}
	]
}